diff -ruN speex-1.1.12/libspeex/kiss_fft.h speex/libspeex/kiss_fft.h
--- speex-1.1.12/libspeex/kiss_fft.h	2005-12-22 12:14:33.000000000 +0100
+++ speex/libspeex/kiss_fft.h	2006-07-26 15:38:39.000000000 +0200
@@ -5,7 +5,7 @@
 #include <stdio.h>
 #include <math.h>
 #include <memory.h>
-#include <malloc.h>
+//#include <malloc.h>
 
 #ifdef __cplusplus
 extern "C" {
diff -ruN speex-1.1.12/libspeex/stack_alloc.h speex/libspeex/stack_alloc.h
--- speex-1.1.12/libspeex/stack_alloc.h	2006-01-31 23:25:10.000000000 +0100
+++ speex/libspeex/stack_alloc.h	2006-07-26 15:38:04.000000000 +0200
@@ -109,7 +109,7 @@
 
 #endif
 
-#if defined(VAR_ARRAYS)
+#if defined(VAR_ARRAYS)  && !( defined(__GNUC__) && __GNUC__ < 3 )
 #define VARDECL(var) 
 #define ALLOC(var, size, type) type var[size]
 #elif defined(USE_ALLOCA)
diff -ruN speex-1.1.12/Makefile.am speex/Makefile.am
--- speex-1.1.12/Makefile.am	2005-11-23 12:42:56.000000000 +0100
+++ speex/Makefile.am	2006-07-26 15:38:04.000000000 +0200
@@ -13,9 +13,9 @@
 EXTRA_DIST = Speex.spec Speex.spec.in Speex.kdevelop speex.m4 speex.pc.in README.blackfin README.symbian README.TI-DSP
 
 #Fools KDevelop into including all files
-SUBDIRS = libspeex include @src@ doc win32 symbian ti
+SUBDIRS = libspeex include doc win32 symbian ti
 
-DIST_SUBDIRS = libspeex include src doc win32 symbian ti
+DIST_SUBDIRS = libspeex include doc win32 symbian ti
 
 rpm: dist
 	rpmbuild -ta ${PACKAGE}-${VERSION}.tar.gz
diff -ruN speex-1.1.12/Makefile.in speex/Makefile.in
--- speex-1.1.12/Makefile.in	2006-02-10 11:13:16.000000000 +0100
+++ speex/Makefile.in	2006-07-26 15:38:04.000000000 +0200
@@ -194,8 +194,8 @@
 EXTRA_DIST = Speex.spec Speex.spec.in Speex.kdevelop speex.m4 speex.pc.in README.blackfin README.symbian README.TI-DSP
 
 #Fools KDevelop into including all files
-SUBDIRS = libspeex include @src@ doc win32 symbian ti
-DIST_SUBDIRS = libspeex include src doc win32 symbian ti
+SUBDIRS = libspeex include doc win32 symbian ti
+DIST_SUBDIRS = libspeex include doc win32 symbian ti
 all: config.h
 	$(MAKE) $(AM_MAKEFLAGS) all-recursive
 
